{{ define "script" }}
resource "null_resource" "provision_{{ .Get "resource_name" }}_step{{ .Get "step_number" }}" {
  depends_on = [
    "{{ .Get "depends_on" }}"
  ]

  provisioner "file" {
    {{ if .Host.IsWindows }}
      {{ $dstfile := printf "C:/laforge_script_%s.ps1" (.Get "step_number") }}
      connection {
        host     = "${google_compute_instance.{{ .Get "resource_name" }}.network_interface.0.access_config.0.assigned_nat_ip}"
        type     = "winrm"
        user     = "Administrator"
        timeout  = "60m"
        password = "{{ .Competition.RootPassword }}"
      }

      source      = "assets/{{ .Host.Hostname }}_{{ .Script.Base }}"
      destination = "{{ $dstfile }}"
    {{ else }}
      {{ $dstfile := printf "/tmp/laforge_script_%s.sh" (.Get "step_number") }}
      connection {
        agent       = "false"
        host        = "${google_compute_instance.{{ .Get "resource_name" }}.network_interface.0.access_config.0.assigned_nat_ip}"
        type        = "ssh"
        user        = "root"
        timeout     = "60m"
        private_key = "${file("{{ index .Build.Config "rel_ssh_private_key_file" }}")}"
      }
      source      = "assets/{{ .Host.Hostname }}_{{ .Script.Base }}"
      destination = "{{ $dstfile }}"
    {{ end }}
  }

  provisioner "remote-exec" {
    {{ if .Host.IsWindows }}
      {{ $dstfile := printf "C:/laforge_script_%s.ps1" (.Get "step_number") }}
      connection {
        host     = "${google_compute_instance.{{ .Get "resource_name" }}.network_interface.0.access_config.0.assigned_nat_ip}"
        type     = "winrm"
        user     = "Administrator"
        timeout  = "60m"
        password = "{{ .Competition.RootPassword }}"
      }

      inline = [
        "powershell -NoProfile -ExecutionPolicy Bypass {{ $dstfile }}",
        "rm {{ $dstfile }}",
      ]
    {{ else }}
      {{ $dstfile := printf "/tmp/laforge_script_%s.sh" (.Get "step_number") }}
      connection {
        agent       = "false"
        host        = "${google_compute_instance.{{ .Get "resource_name" }}.network_interface.0.access_config.0.assigned_nat_ip}"
        type        = "ssh"
        user        = "root"
        timeout     = "60m"
        private_key = "${file("{{ index .Build.Config "rel_ssh_private_key_file" }}")}"
      }

      inline = [
        "chmod +x {{ $dstfile }}",
        "{{ $dstfile }}{{ .Script.ArgString }}",
        "rm -f {{ $dstfile }}",
      ]
    {{ end }}
  }
}
{{ end }}