// Code generated by go-bindata.
// sources:
// templates/config.yml
// templates/env.yml
// templates/terraform/tfawsdhcpoptions.tmpl
// templates/terraform/tfawsdhcpoptionsassociation.tmpl
// templates/terraform/tfawsegressrule.tmpl
// templates/terraform/tfawselasticip.tmpl
// templates/terraform/tfawsingressrule.tmpl
// templates/terraform/tfawsinstance.tmpl
// templates/terraform/tfawskeypair.tmpl
// templates/terraform/tfawsnatgateway.tmpl
// templates/terraform/tfawsprovider.tmpl
// templates/terraform/tfawsroute.tmpl
// templates/terraform/tfawsroute53arecord.tmpl
// templates/terraform/tfawsroutetable.tmpl
// templates/terraform/tfawsroutetableassociation.tmpl
// templates/terraform/tfawssecuritygroup.tmpl
// templates/terraform/tfawssubnet.tmpl
// templates/terraform/tfawsvirtualprivatecloud.tmpl
// templates/terraform/tffileprovisioner.tmpl
// templates/terraform/tfgcpelasticip.tmpl
// templates/terraform/tfgcpfirewall.tmpl
// templates/terraform/tfgcpfirewallallowrule.tmpl
// templates/terraform/tfgcpinstance.tmpl
// templates/terraform/tfgcpnetwork.tmpl
// templates/terraform/tfgcpprovider.tmpl
// templates/terraform/tfgcpsubnet.tmpl
// templates/terraform/tfinlineprovisioner.tmpl
// templates/terraform/tfinstanceconnection.tmpl
// templates/terraform/tfoutput.tmpl
// templates/terraform/tfscriptprovisioner.tmpl
// templates/terraform/tfuserdatascript.tmpl
// templates/terraform/tfvar.tmpl
// DO NOT EDIT!

package competition

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _configYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x54\x5f\x6f\xdb\x36\x10\x7f\xd7\xa7\xf8\xa1\x7a\x0b\x30\xa3\x5b\x50\x0c\xed\x9b\x91\xd8\x8e\x86\xc4\x32\x6c\x65\x05\xf6\x22\xd0\xd2\x59\x62\x43\x93\xc2\x1d\x19\xcf\xfb\xf4\xc3\xc9\xea\x9a\xa1\xe8\x4b\x2d\x40\x00\xff\xdc\x1d\xef\xf7\x87\xcc\x7f\xf6\xcb\xf2\x1c\x8f\x66\x19\xb8\x23\x3c\x2e\xeb\x87\xf2\x69\x81\xbb\xe0\x0f\xb6\xd3\x1d\xfd\xab\xde\x0a\x0e\xd6\x11\xac\xa0\x73\x61\x6f\x1c\x62\xc0\x39\x24\x46\x13\x8e\x03\x45\x1b\x6d\xf0\x33\x8d\x9d\x3b\x07\xf2\xaf\x96\x83\x3f\x92\x8f\x02\xeb\x7b\x62\x1b\x11\x7b\xb2\x8c\x81\xc3\x40\x1c\x2d\x09\x0e\x1c\x8e\xe8\x89\x49\xf3\x34\xf5\xe6\x06\xf7\x25\xd6\x65\x85\x79\x55\x2d\x9e\x36\x15\xaa\x12\xdb\xe7\x35\x1e\xe7\xcb\x72\xbb\x5a\xe0\x73\x51\x3d\x94\xcf\x15\xee\xca\xf5\xb2\x58\x3d\x6f\x8b\xf5\x4a\xf3\x00\x54\x0f\xc5\x0e\xcb\xe2\x71\x81\x9b\x9b\xec\xe7\x99\xb8\x22\x35\xc7\xfc\xf3\x6e\xe2\x2d\xb1\x51\x3e\xb2\x1c\x1b\x0e\xaf\xb6\xa5\x0b\x55\x1a\x30\xdf\x14\x68\x98\x5a\xf2\xd1\x1a\x27\x23\xfe\xcc\x9c\xa4\xd6\x45\xf9\x94\x01\x66\xb0\xf5\x0b\x9d\x3f\xe1\xdd\xbb\x69\x26\xd4\x30\xc5\x71\xe1\xaa\x06\x57\x21\x74\x8e\x70\xe7\x42\x6a\xbf\xeb\x74\x45\x9e\xd8\x44\x82\xc1\x1f\xbb\x72\xfd\xa6\xc9\x8b\xf2\x87\xc0\x58\xdd\x6d\x14\xc0\x2c\xcb\xb1\x4b\xc3\xe0\xce\x2a\x2a\xcc\x5e\x82\x4b\x91\x30\x98\xd8\xab\x2f\xe2\x57\xbb\x68\xe0\xdc\x49\x80\x7c\x8b\x1e\x38\x7c\xa1\x26\xc2\xfa\xb1\x9c\x96\xd5\xe5\xff\xd9\xa8\x6b\x86\x6f\x7c\xe8\x40\x8b\x4d\x84\x4c\xf9\xd7\xb3\xb1\x0d\x29\xd2\x87\x5b\x2c\xfe\x8e\xc4\xde\xb8\x1f\x6a\x67\xfe\x0b\xfd\x2b\x78\x42\x71\x9f\x4d\x37\x62\x9c\x9e\xac\x73\xd8\x13\x92\x50\xab\xe0\x1b\x26\x65\x91\xa9\x09\xdc\x0a\x8c\x73\xe1\x64\x7d\x97\xe5\x23\x54\x32\x72\x86\x69\x1a\x12\xd1\xe0\x3f\xef\x0b\x7c\x49\xc7\x01\x7d\x90\x28\x19\x4d\xad\xd4\xfc\xe1\xb6\xfe\x27\x78\xaa\x6d\x7b\x3d\xd0\xdd\xed\x77\xd0\xbe\x5e\xf7\x24\x24\xba\x1f\x03\x24\x06\x26\x48\x1c\x2d\xe0\x5b\x84\xd8\x13\x8f\x73\xdb\xc0\x88\x50\x14\x95\xf3\xc9\xbc\x10\x24\x31\x5d\x54\xde\xa7\xe6\x85\xa2\x3e\x0b\xc6\x31\x99\xf6\x3c\xe1\x6f\x67\x99\xdc\xd6\xcd\x78\xac\x8a\xc8\xd4\xd9\xe0\x27\x09\x2f\x49\xd7\x03\x9b\xb7\x47\xeb\x51\x6c\x44\xc7\xfe\xac\x23\x38\x2b\x91\xda\xf1\x5a\x5d\xa4\xe9\xcd\x2b\xe1\x90\x9c\x7b\x43\xbb\x1a\x4e\xbd\xcd\x94\xe5\x6f\x9d\x07\xeb\x0f\x6c\x24\x72\x6a\x62\x62\x9a\x8d\x8f\xd9\xc1\x32\x9d\x8c\x73\x32\xd2\x22\xd4\x24\xb6\xf1\x9c\xe5\xe8\x38\xa4\x41\x2e\xa7\x9c\x7a\x1b\x49\xcf\xd6\xda\x42\x63\x2b\xaa\xb7\x71\x0e\x43\x60\xe5\xce\x68\xb7\xb5\x1d\x46\x53\xff\x82\x5f\x7f\xfb\x7d\xf6\x7e\xf6\x7e\xf6\xf1\xe3\xbf\x01\x00\x00\xff\xff\xdc\x48\x3c\xc4\xb9\x05\x00\x00")

func configYmlBytes() ([]byte, error) {
	return bindataRead(
		_configYml,
		"config.yml",
	)
}

func configYml() (*asset, error) {
	bytes, err := configYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _envYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x55\xdf\x4f\xf2\x48\x14\x7d\xef\x5f\x71\xf2\x91\xec\x03\x09\x5d\xf8\x92\x6f\x37\xe9\x9b\x51\x40\x36\x08\x44\xab\x3e\x6c\x36\xcd\x30\xbd\xc0\xd5\x76\xa6\x3b\x33\xa5\xfe\x88\xff\xfb\x66\xa0\x62\x45\x7d\x50\x37\x01\xd2\x64\xee\x99\xfb\xeb\x9c\x7b\xd3\xb6\xbe\xfa\x0b\x5a\x2d\x8c\xc5\x40\x9b\x25\x61\x3c\x48\xfa\x93\x2b\x1c\x6b\xb5\xe0\xa5\xbf\xf0\x4f\xbc\x62\x8b\x05\x67\x04\xb6\x28\x15\xff\x5b\x12\x9c\xc6\xbd\x2e\x0d\xa4\xce\x0b\x72\xec\x58\x2b\x90\x5a\xb3\xd1\x2a\x27\xe5\xc2\x6d\x1c\x59\xc2\x5a\x64\x25\x59\x54\x9c\x65\xd0\x2a\xbb\x07\x2d\x16\x24\x1d\xf4\xfc\x86\xa4\xb3\x60\x05\xe7\x0b\x34\xa3\x7d\xb8\xcf\xd0\x6e\xe3\x64\x8a\xc9\x34\xc6\x51\x1c\xf7\xcf\x66\x31\xe2\x29\xce\x2f\x27\x18\x1f\x0d\xa6\xe7\xc3\x3e\xae\x47\xf1\xe9\xf4\x32\xc6\xf1\x74\x32\x18\x0d\x2f\xcf\x47\x93\xa1\x8f\x03\x10\x9f\x8e\x2e\x30\x18\x8d\xfb\x68\xb7\x83\xaf\x6b\xf3\x8d\xd0\x16\xfa\x2f\x94\x6a\x49\x4b\x23\xbc\x54\x81\x12\x39\x45\x78\x7c\x44\x38\x11\x39\xe1\xe9\x29\x28\x0c\x2d\xf8\x6e\x8b\xcd\x36\x67\x8f\x1e\xa8\xf1\xd1\x6c\xaf\x5f\x2e\x92\x6a\xc5\x8e\x32\xb6\x2e\x0a\x3a\xe8\xfd\xfc\x33\xfc\xe5\xff\x87\xea\xf0\xe8\xfa\x62\xaf\x45\x51\xd9\x44\x6e\x90\x28\x00\x24\xa7\x26\x42\xaf\x1b\xfe\x0a\xbb\x61\xf7\xf7\xde\x1f\x01\x60\x68\xc9\x5a\x45\x28\x6d\xa7\x22\xeb\x3a\x3f\x03\xe0\x41\x2b\x6a\x20\xe2\x50\x7c\x86\x5a\x2f\x33\xc2\x71\xa6\xcb\x74\x8f\xd8\x52\x16\x9f\x23\xd6\xdb\xe7\xd5\xeb\x1c\x8c\xd7\x19\x5b\x19\xe2\x4a\x18\x16\xf3\x8c\x6c\xb0\x7e\x3e\x79\x2e\x74\x27\xf2\x22\xa3\x08\xcf\xe8\xa1\xba\x9c\x69\x2f\x7a\xa9\x5c\x50\xe8\x34\x91\xfe\x14\xa1\x7b\xd8\x6e\x9a\x2b\x50\xe8\x34\x0a\x02\xe0\xab\x39\x81\x6d\xd6\x13\x9d\x0b\x56\x01\x90\x6e\x0e\x11\x96\x46\xa8\x54\xae\x84\xcd\x43\xa9\xf3\xef\x96\xf8\xab\xcc\x0b\x9c\x6a\xeb\x6c\x00\xdc\x94\x79\x91\xac\xbc\xe1\x47\x0d\x54\xac\x52\x5d\xd5\x06\x20\x72\x8e\xf0\xe3\x47\x6d\xed\x24\xdf\x9a\x96\x1f\x68\x77\x7b\x2b\x32\xfe\x7c\x54\xaa\x3e\x28\xb5\xf3\xfa\x1f\xf4\x7c\xd9\x6b\xe0\xd5\x66\xbf\xb7\xdb\xdf\xac\x37\x21\x57\x69\x73\x6b\xf1\xdb\x56\x62\x04\x80\xaa\x31\x5f\xb2\x53\xbf\x1a\x6a\xa2\xdb\x2f\x4c\x6d\xd8\x72\xfe\x3c\xf1\x1a\x29\x8c\x5e\x73\x4a\x2f\xfe\x7b\xed\xbf\x47\xc0\xa3\x8d\x81\x76\x36\xc6\xab\x3a\x40\x26\xac\x4b\xb4\x74\xd4\x98\x0b\x2b\x47\x46\x89\x2c\x91\xde\xd9\x46\xf8\xfb\x9f\xfa\x66\x25\x6c\x52\x94\xf3\x8c\x65\xc2\x45\x84\x85\xc8\x2c\xed\xca\x7f\x14\xc4\xca\x3a\xa1\x24\x25\xaf\xe6\x0d\x58\x69\xb8\x70\x4d\x4f\x4b\xb2\x34\xec\xee\x93\xa5\xd1\x65\xd1\xbc\x11\x69\xce\x2a\x29\x84\xb5\x95\x36\x69\x23\x49\x69\xc9\xbc\x75\x7f\x23\xce\x7b\xf2\xfc\x17\x00\x00\xff\xff\xd2\x35\x11\xf2\x81\x09\x00\x00")

func envYmlBytes() ([]byte, error) {
	return bindataRead(
		_envYml,
		"env.yml",
	)
}

func envYml() (*asset, error) {
	bytes, err := envYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "env.yml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _terraformTfawsdhcpoptionsTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8c\x31\xae\xc3\x20\x10\x44\x7b\x4e\x31\xa2\xfe\xe2\x06\xee\x5c\xbb\xf1\xef\xa2\x08\xad\x60\x45\x5c\x18\x10\x38\x4e\x81\xf6\xee\x91\x71\x52\x44\x4a\x91\x76\xde\x9b\x57\xb8\xa6\x7b\x71\x0c\x4d\x8f\x6a\xf7\xec\xac\xbf\xb9\x6c\x73\xda\x96\x14\xab\x86\x6e\x0d\x66\xa2\x95\x21\xa2\xd1\x14\xe0\xd3\x4a\x4b\xb4\xf1\xd8\x86\x93\x8f\x7d\x7a\x5b\x9f\x8e\xad\x5c\x76\x2e\x15\x03\x2e\x0a\x00\x5a\x2b\x14\x03\xc3\x8c\xd3\x3c\x9f\x4c\xa4\x13\x1c\x35\x23\xa2\xff\x5e\x22\x47\xdf\xd1\x55\x01\x1b\x85\x2f\x8d\x7f\x0a\x3f\xbc\xe5\x19\x00\x00\xff\xff\xf2\xfe\x61\x4f\xe6\x00\x00\x00")

func terraformTfawsdhcpoptionsTmplBytes() ([]byte, error) {
	return bindataRead(
		_terraformTfawsdhcpoptionsTmpl,
		"terraform/tfawsdhcpoptions.tmpl",
	)
}

func terraformTfawsdhcpoptionsTmpl() (*asset, error) {
	bytes, err := terraformTfawsdhcpoptionsTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "terraform/tfawsdhcpoptions.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _terraformTfawsdhcpoptionsassociationTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x4a\x2d\xce\x2f\x2d\x4a\x4e\x55\x48\x2c\x2f\x8e\x2f\x2b\x48\x8e\x4f\xc9\x48\x2e\x88\xcf\x2f\x28\xc9\xcc\xcf\x2b\x8e\x4f\x2c\x2e\xce\x4f\xce\x4c\x04\x71\x14\x94\xaa\xab\x15\xf4\xfc\x12\x73\x53\x15\x6a\x6b\x95\x14\xaa\xb9\x14\x14\x40\xca\x33\x53\x14\x6c\x15\x94\x54\xaa\xa1\xda\xf5\x40\x8a\xc2\x02\x9c\x61\x0a\xf5\x32\x53\x6a\x95\xb8\x14\x14\x50\x4c\x45\xd3\x83\x62\x25\xd8\x00\x17\x0f\xe7\x00\x7f\x28\x1f\xc5\xa0\x5a\x40\x00\x00\x00\xff\xff\xba\x12\xcd\xed\xaf\x00\x00\x00")

func terraformTfawsdhcpoptionsassociationTmplBytes() ([]byte, error) {
	return bindataRead(
		_terraformTfawsdhcpoptionsassociationTmpl,
		"terraform/tfawsdhcpoptionsassociation.tmpl",
	)
}

func terraformTfawsdhcpoptionsassociationTmpl() (*asset, error) {
	bytes, err := terraformTfawsdhcpoptionsassociationTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "terraform/tfawsdhcpoptionsassociation.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _terraformTfawsegressruleTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xcc\x4d\x0a\xc2\x30\x10\xc5\xf1\xfd\x9c\xe2\x91\xb5\xe4\x06\x59\x29\x82\xbb\x22\xee\x44\x8a\xa6\xb1\x88\x6d\x27\x4c\xb2\x1b\xe6\xee\x12\x3f\xb0\xb3\x7b\xfc\x86\x7f\x1a\x25\x95\x02\x25\xe0\x2e\x3c\xf7\x99\xa5\x22\x40\x15\x7e\x2f\x3c\x77\x6d\x9a\x11\x50\x79\x6d\x27\xfe\x4b\x16\xae\x1c\x79\x42\x80\x6b\xd6\xfd\xb6\x99\x23\x20\x3e\x06\xe9\x6f\x13\xc7\x67\x41\xc0\x99\x00\xb4\x84\x5c\x97\x31\xc1\x6f\x0f\xbb\x63\xf9\x74\xda\x39\x55\x6f\xe6\x36\xdf\xaf\xb4\x0c\x6f\xba\x90\xbd\x02\x00\x00\xff\xff\x1d\x21\xcb\x45\xa9\x00\x00\x00")

func terraformTfawsegressruleTmplBytes() ([]byte, error) {
	return bindataRead(
		_terraformTfawsegressruleTmpl,
		"terraform/tfawsegressrule.tmpl",
	)
}

func terraformTfawsegressruleTmpl() (*asset, error) {
	bytes, err := terraformTfawsegressruleTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "terraform/tfawsegressrule.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _terraformTfawselasticipTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcc\xb1\x0a\xc2\x50\x0c\x85\xe1\xbd\x4f\x71\x08\xce\xf7\x0d\x3a\x88\x93\x8b\x38\xb9\x4a\x48\x23\x66\xf0\x5a\x7a\xaf\x3a\x84\xbc\xbb\x84\xb6\xe3\xf9\xe1\x7c\x8b\xb6\xf7\x67\x11\x05\xf1\xaf\xdd\xd5\x66\x02\xb9\xa3\x5c\xf8\xa5\x88\x20\xf8\x00\x7c\x67\xc1\x88\xcc\xb7\xeb\x09\x11\x03\x72\xd8\x03\xe5\xd8\x3b\xcb\x73\x4d\x56\x5b\xe7\x2a\x8a\x11\x74\xf0\xe4\xf6\x52\xf2\x7a\xde\xc7\x46\x17\x9b\x82\x56\x49\xeb\x94\x44\xfc\x03\x00\x00\xff\xff\x6d\xf9\x64\x4d\x8d\x00\x00\x00")

func terraformTfawselasticipTmplBytes() ([]byte, error) {
	return bindataRead(
		_terraformTfawselasticipTmpl,
		"terraform/tfawselasticip.tmpl",
	)
}

func terraformTfawselasticipTmpl() (*asset, error) {
	bytes, err := terraformTfawselasticipTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "terraform/tfawselasticip.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _terraformTfawsingressruleTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xcc\xb1\x0a\xc2\x30\x18\xc4\xf1\xbd\x4f\x71\x64\x96\xbc\x41\x27\x45\x70\x2b\xe2\x26\x52\x34\x8d\xa5\xd8\xe6\xca\x97\x6c\xe1\x7b\x77\x69\x69\x8a\xae\xff\xfb\x71\x43\xe8\xc5\xc7\x88\x5c\x01\xc0\x5b\x38\xb5\x33\x25\x01\xa8\x61\x72\x86\x3d\x0b\xa7\x66\x29\xaa\x66\x35\x89\x45\xec\xe6\xc6\x3f\x31\x0b\x13\x1d\xc7\x1f\xd1\x94\x54\x8c\x1b\x3a\x69\x5f\x23\xdd\x27\xa2\xc6\x7d\x6d\x40\xce\xf2\x0c\xbd\x87\x3d\x5e\x4e\xd7\xa8\xba\x65\x2c\x27\x56\xd5\x1c\x76\xe7\x43\xb7\xcd\x8f\x0a\xd0\x6f\x00\x00\x00\xff\xff\xf8\xa7\x9c\x97\xc7\x00\x00\x00")

func terraformTfawsingressruleTmplBytes() ([]byte, error) {
	return bindataRead(
		_terraformTfawsingressruleTmpl,
		"terraform/tfawsingressrule.tmpl",
	)
}

func terraformTfawsingressruleTmpl() (*asset, error) {
	bytes, err := terraformTfawsingressruleTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "terraform/tfawsingressrule.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _terraformTfawsinstanceTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x90\xd1\x4a\x33\x31\x10\x85\xef\xf7\x29\x86\xe5\xbf\xfc\xd9\x37\xe8\x45\x51\x2a\x8b\x28\x8b\xad\x57\x22\x21\x4d\x86\x32\xb8\xcd\x86\x49\xb6\xb2\x84\xbc\xbb\x24\x9b\x14\x05\x41\x10\xef\xc2\x99\xf3\x9d\x39\x13\x46\x37\xcd\xac\x10\x5a\xf9\xee\x04\x19\xe7\xa5\x51\xd8\x42\x1b\x02\x74\x8f\xf2\x8c\x10\x63\x0b\xa1\x01\x90\x67\x82\xcd\xaa\x6f\x1f\xfa\x24\x37\x00\x15\x10\x7e\xb1\x58\xc7\x7d\x11\x0f\x49\x5b\x7d\x6e\x3e\x1a\xf4\x82\x74\xf2\xfc\x0b\x69\xd7\x2a\x75\x09\xd8\xaf\xcf\xb2\xae\x23\x9d\x99\x37\x5c\x84\x49\xd2\x15\x49\x8a\x95\xc4\x19\xba\xc7\x65\x48\xef\x4a\x55\x7b\x66\x2d\xd3\x45\x7a\x14\x64\x6b\xa9\x61\x55\xfa\xa1\x34\x92\xce\x4d\x8a\x92\xc7\xce\xc7\x91\x94\x20\x2b\xa4\xd6\x8c\xce\xc1\x06\xf2\x95\xd5\x31\x64\x43\x3f\x6c\xcb\x38\xc6\xa6\x01\xb8\x58\x25\x1c\xaa\x99\xc9\x2f\xe2\xc4\xd3\x6c\x05\xe9\xc4\xbe\x34\x00\x00\x21\xb0\x34\x27\x84\x6e\x5f\x3c\x77\xc9\xe2\x62\xcc\x53\xb8\xfe\xc2\x97\x84\x2e\x84\x7c\x4f\xfe\x84\xf6\x7f\x09\x42\xa3\x33\xf6\x9a\xd6\xce\x0e\x59\x68\xe9\x65\x69\xf9\xec\x90\x6f\xa5\x97\x7b\xc5\x64\x7d\x77\xd8\x1d\xf0\x6c\x47\xe9\xb1\x7b\x42\xa3\x91\x51\x43\x86\x1b\xc8\xf6\x9b\xc9\x18\x54\x9e\x26\xf3\x83\xb5\xb4\xdf\xd1\x88\x03\x4f\x17\x72\x34\x19\xe4\xda\x3f\x84\xef\xf0\x3c\xac\x7d\x3f\xa7\xf4\x66\x24\xf3\x07\x39\xeb\x91\xbf\xcb\x89\x1f\x01\x00\x00\xff\xff\xc7\xea\x7e\xf8\xeb\x02\x00\x00")

func terraformTfawsinstanceTmplBytes() ([]byte, error) {
	return bindataRead(
		_terraformTfawsinstanceTmpl,
		"terraform/tfawsinstance.tmpl",
	)
}

func terraformTfawsinstanceTmpl() (*asset, error) {
	bytes, err := terraformTfawsinstanceTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "terraform/tfawsinstance.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _terraformTfawskeypairTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x4a\x2d\xce\x2f\x2d\x4a\x4e\x55\x50\x4a\x2c\x2f\x8e\xcf\x4e\xad\x8c\x2f\x48\xcc\x2c\x52\x52\x50\xaa\xae\xd6\xf3\x4b\xcc\x4d\xad\xad\x55\x52\xa8\xe6\x52\x50\x00\xc9\xe4\x25\xe6\xa6\x2a\xd8\x82\xa4\x14\xc0\x72\x0a\xb5\xb5\x4a\x5c\x0a\x0a\x05\xa5\x49\x39\x99\xc9\x20\xbd\x30\xc9\x00\xb0\x88\x77\x6a\x25\x58\x45\x2d\x20\x00\x00\xff\xff\x02\x77\x3f\xd3\x64\x00\x00\x00")

func terraformTfawskeypairTmplBytes() ([]byte, error) {
	return bindataRead(
		_terraformTfawskeypairTmpl,
		"terraform/tfawskeypair.tmpl",
	)
}

func terraformTfawskeypairTmpl() (*asset, error) {
	bytes, err := terraformTfawskeypairTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "terraform/tfawskeypair.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _terraformTfawsnatgatewayTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\xc1\x6a\xc4\x30\x0c\x44\xef\xfe\x8a\xc1\xf4\xec\x3f\xc8\xa9\xf4\xd0\x4b\x09\x14\x7a\x29\xc5\xa8\xb6\x08\x82\xd4\x36\xb1\x93\x50\x8c\xff\xbd\xb8\xa1\x65\xb3\xec\xea\x24\x24\xbd\x19\x31\x0b\xe7\xb8\x2e\x8e\xa1\x69\xcf\x56\x42\xe1\x25\x70\xb1\x13\x15\xde\xe9\x5b\x43\xd7\x0a\xf3\x42\x5f\x8c\xd6\xac\x4c\xbb\x46\x55\xc0\x96\x9c\x15\x8f\x01\xfa\xa1\x76\x6e\x4b\xce\xd4\x6a\xde\xc6\xc7\xdf\xdb\xd6\x8c\xf8\xa6\x55\x53\xea\xac\x1f\xe8\x8e\xb4\xe9\xab\x3f\x75\x9a\xe7\xe8\xa8\x48\x0c\x27\x13\x96\xd4\x4d\x9e\x66\xca\x45\xdc\xf3\x78\xb2\x02\xf2\xfa\xd9\x3f\x17\x8f\x5e\xff\xd4\x31\xee\xe0\xeb\xd1\x5d\x52\x0a\xf0\x9c\x38\xf8\x6c\x63\xc0\x80\xf7\x9b\x29\x98\xeb\x0c\x3e\x54\xfb\x09\x00\x00\xff\xff\x6d\x5b\x13\xb8\x38\x01\x00\x00")

func terraformTfawsnatgatewayTmplBytes() ([]byte, error) {
	return bindataRead(
		_terraformTfawsnatgatewayTmpl,
		"terraform/tfawsnatgateway.tmpl",
	)
}

func terraformTfawsnatgatewayTmpl() (*asset, error) {
	bytes, err := terraformTfawsnatgatewayTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "terraform/tfawsnatgateway.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _terraformTfawsproviderTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x28\xca\x2f\xcb\x4c\x49\x2d\x52\x50\x4a\x2c\x2f\x56\x52\xa8\xe6\x52\x50\x48\x4c\x4e\x4e\x2d\x2e\x8e\xcf\x4e\xad\x54\x50\xb0\x55\x50\xaa\xae\x56\xd0\x73\x04\x0b\x79\xa7\x56\x2a\xd4\xd6\x2a\x71\x29\x28\x14\xa7\x26\x17\xa5\x96\xa0\x28\x09\x06\x0b\x21\x94\x14\xa5\xa6\x67\xe6\xe7\x29\x80\x01\x54\x49\x10\x44\x08\x22\x5f\x50\x94\x9f\x96\x99\x93\x8a\x2c\x1f\x00\x15\x02\x29\xa8\x05\x04\x00\x00\xff\xff\xc6\x96\x48\xc0\x99\x00\x00\x00")

func terraformTfawsproviderTmplBytes() ([]byte, error) {
	return bindataRead(
		_terraformTfawsproviderTmpl,
		"terraform/tfawsprovider.tmpl",
	)
}

func terraformTfawsproviderTmpl() (*asset, error) {
	bytes, err := terraformTfawsproviderTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "terraform/tfawsprovider.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _terraformTfawsrouteTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\xca\x2f\x2d\x49\x55\xa8\xe6\x52\x50\x48\xce\x4c\x29\x8a\x4f\xca\xc9\x4f\xce\x56\xb0\x55\x50\x32\xd0\x03\x43\x7d\x03\x25\x2e\x05\x85\xbc\xc4\x92\xf8\xf4\xc4\x92\xd4\xf2\xc4\xca\xf8\xcc\x14\x90\xb4\x4a\x75\x62\x79\x71\x3c\x92\xb8\x5e\x75\xb5\x9e\x9f\x63\x88\x3b\x94\xe7\x97\x98\x9b\x5a\x5b\xab\x97\x99\x52\xab\xc4\x55\x0b\x08\x00\x00\xff\xff\x87\x4e\x1f\xc8\x64\x00\x00\x00")

func terraformTfawsrouteTmplBytes() ([]byte, error) {
	return bindataRead(
		_terraformTfawsrouteTmpl,
		"terraform/tfawsroute.tmpl",
	)
}

func terraformTfawsrouteTmpl() (*asset, error) {
	bytes, err := terraformTfawsrouteTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "terraform/tfawsroute.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _terraformTfawsroute53arecordTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcd\x31\xcb\xc2\x30\x10\xc6\xf1\x3d\x9f\xe2\x21\xf3\x4b\x97\x17\xc7\x0e\x82\x83\x82\x38\x48\x27\x45\x4a\x69\x0f\x11\xf4\x4e\x2e\x29\xa2\xe1\xbe\xbb\x34\x89\x63\xf2\xfb\x3f\x9c\x52\x90\x59\x47\x82\x1f\x5e\xa1\x57\x99\x23\xad\xfe\x7b\xa5\x51\x74\xf2\xf0\x29\xa1\x39\x0c\x0f\x82\x99\x47\x72\xc0\x47\x98\xfa\xdb\x84\xb6\xd8\x49\x98\x76\x9b\x45\x1d\xc0\x4b\x58\x61\x2b\x21\x72\x1d\x3a\x20\xbe\x9f\x99\xd6\xf9\x11\xef\xbf\xac\xeb\xf6\xb5\x28\x27\x03\x5a\x9c\x1d\x00\xa4\xa4\x03\x5f\x09\xcd\xb1\x80\x59\xfe\xc6\xb2\x6b\xcc\xfc\x5f\xad\x88\xa7\x4c\x17\x67\xdf\x00\x00\x00\xff\xff\x54\x7e\x23\xaf\xcc\x00\x00\x00")

func terraformTfawsroute53arecordTmplBytes() ([]byte, error) {
	return bindataRead(
		_terraformTfawsroute53arecordTmpl,
		"terraform/tfawsroute53arecord.tmpl",
	)
}

func terraformTfawsroute53arecordTmpl() (*asset, error) {
	bytes, err := terraformTfawsroute53arecordTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "terraform/tfawsroute53arecord.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _terraformTfawsroutetableTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8e\x3d\xaa\xc3\x30\x10\x84\xfb\x3d\xc5\x20\x5e\xad\x1b\xb8\x7a\x7d\x08\x26\xa4\x35\x8a\x35\x18\x83\xff\x90\x64\xa7\x58\xf6\xee\x41\x82\x14\xe9\x96\x9d\x8f\x6f\x26\x31\xef\x67\x1a\x09\x17\xde\x79\x48\xfb\x59\x38\x94\xf0\x5a\xe8\xe0\x54\xe1\x6f\x61\x25\xcc\x1c\x54\x80\xeb\x18\x87\x39\xa2\x83\xfb\xd3\x8a\x5f\xc7\xe8\x2b\xf4\xbc\xff\x7f\x41\x3f\x47\x73\x02\x08\xa0\x9a\xc2\x36\x11\xbe\xaf\xd6\x6c\x26\x40\xfd\xfa\x07\xd7\x63\x09\x85\xbe\xe7\x16\x99\x18\x5b\xa4\xca\xad\x5e\x02\x94\x30\xe5\x56\x08\x34\x6d\xf7\xbb\x45\x00\x13\xfb\x04\x00\x00\xff\xff\x0e\x36\xad\xa3\xba\x00\x00\x00")

func terraformTfawsroutetableTmplBytes() ([]byte, error) {
	return bindataRead(
		_terraformTfawsroutetableTmpl,
		"terraform/tfawsroutetable.tmpl",
	)
}

func terraformTfawsroutetableTmpl() (*asset, error) {
	bytes, err := terraformTfawsroutetableTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "terraform/tfawsroutetable.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _terraformTfawsroutetableassociationTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xcc\x31\x0e\xc2\x30\x0c\x05\xd0\xbd\xa7\xf8\xb2\x98\x73\x03\xae\xc0\x00\xec\x91\xdb\x7a\x88\x04\x8d\x14\x27\x62\xb0\x7c\x77\x94\x86\x21\x6c\xfe\x5f\x7e\xbf\x88\xe6\x56\x36\x01\xf1\x47\x63\xc9\xad\x4a\xac\xbc\xbe\x24\xb2\x6a\xde\x12\xd7\x94\x0f\x02\x99\x21\xdc\xf8\x2d\x70\x27\xd8\x02\x68\x5b\x0f\xa9\x31\xed\xb8\x82\x2e\xd6\xf5\xa8\x42\x7f\x7d\x8c\xf3\x27\x42\xda\x9d\x16\x60\x9e\x9f\xe1\xd4\x9f\xfa\xde\xf3\xf3\x8c\x7f\x0b\xfe\x0d\x00\x00\xff\xff\x4b\x25\x63\x0b\xae\x00\x00\x00")

func terraformTfawsroutetableassociationTmplBytes() ([]byte, error) {
	return bindataRead(
		_terraformTfawsroutetableassociationTmpl,
		"terraform/tfawsroutetableassociation.tmpl",
	)
}

func terraformTfawsroutetableassociationTmpl() (*asset, error) {
	bytes, err := terraformTfawsroutetableassociationTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "terraform/tfawsroutetableassociation.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _terraformTfawssecuritygroupTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x8f\xb1\x4a\x84\x31\x10\x84\xfb\x3c\xc5\x10\xac\xf3\x06\x56\x6a\x61\x73\xc8\x21\xb6\x3f\x21\x59\x42\xe0\x2e\x7f\xd8\x4d\x4e\x64\xd9\x77\x97\x9c\x1c\x78\x60\x65\xb9\xfb\x0d\xdf\x30\x4c\xb2\x4f\x4e\x04\x1f\x3f\x65\x13\x4a\x93\xeb\xf8\xda\x0a\xef\xb3\x7b\x78\x55\x84\x43\x3c\x13\xcc\x3c\xd4\x01\x6d\x1d\x8f\xf7\xc0\x01\x99\x24\x71\xed\xa3\xee\xed\x46\x9f\x7f\xbd\x7e\x42\x97\x9e\xb6\x9a\x17\x7f\xd0\xd5\x76\xe9\x29\xac\xe4\xc7\xdb\xd3\xcd\x15\x6a\x36\xef\x1c\xa0\xca\xb1\x15\x42\x78\x6d\x85\x49\xe4\x38\x4f\x24\x66\x0e\x58\x0c\xe1\x9d\xce\xfd\x14\x07\x85\x23\xb5\x4c\x4c\x19\x57\xa8\x4a\x2d\x9b\xdd\x19\x5e\xfe\x29\x18\xb1\xc8\x75\x33\x70\xf8\x7b\xb5\x39\xfb\x0e\x00\x00\xff\xff\xb2\x18\x63\xf7\x40\x01\x00\x00")

func terraformTfawssecuritygroupTmplBytes() ([]byte, error) {
	return bindataRead(
		_terraformTfawssecuritygroupTmpl,
		"terraform/tfawssecuritygroup.tmpl",
	)
}

func terraformTfawssecuritygroupTmpl() (*asset, error) {
	bytes, err := terraformTfawssecuritygroupTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "terraform/tfawssecuritygroup.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _terraformTfawssubnetTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x90\xc1\x6a\xf4\x20\x14\x46\xf7\x3e\xc5\x87\xfc\xcb\x9f\xbc\x41\x16\x65\x66\x33\xd0\x76\x42\x17\x5d\xb4\x14\xb9\x51\x99\x4a\x9d\xab\xc4\x24\xa5\x15\xdf\xbd\x68\x3a\x10\x7a\x97\x9e\x73\x44\xef\x64\x53\x58\x26\x6d\x21\xe9\x33\xa9\xb4\x8c\x6c\x67\x09\x99\x33\xba\x47\xba\x5a\x94\x22\x91\x05\xb0\x46\xad\x9c\xc1\x6e\x7a\xc8\x7f\xb9\x46\x6b\xd4\x5d\xf5\x9f\x87\xc3\xad\xe9\x9c\x29\x52\x00\xda\x99\x49\x8d\x3e\xe8\x8f\x5d\x55\xdd\xc3\xe9\xf8\x54\xef\x16\x00\xad\xe4\x3c\x8d\xce\xbb\xf9\x4b\x7d\x07\xb6\x37\xe7\x6e\x07\x5e\xea\xf9\xe6\x5f\x29\xaa\xb8\x8c\xde\x69\xe5\xa2\x0a\xac\x3c\x2d\xac\xdf\xd1\xa3\x46\x0f\x14\x87\x06\x4f\xc3\x99\xef\x37\x52\x8a\x00\x8c\x8d\x96\x4d\x52\x81\xd1\xe3\x55\xd4\xb7\xe4\x3c\x11\x5f\x2c\xba\xe3\xc6\xce\xdc\xcc\x3a\x32\xe7\xae\x14\xf9\xff\xd7\xb3\x6c\x1a\x7a\x13\xc0\x4c\x97\x84\x8c\x46\xda\x77\xfb\x3f\xeb\x12\x40\x11\xe5\x27\x00\x00\xff\xff\xb9\x07\x80\xb2\x59\x01\x00\x00")

func terraformTfawssubnetTmplBytes() ([]byte, error) {
	return bindataRead(
		_terraformTfawssubnetTmpl,
		"terraform/tfawssubnet.tmpl",
	)
}

func terraformTfawssubnetTmpl() (*asset, error) {
	bytes, err := terraformTfawssubnetTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "terraform/tfawssubnet.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _terraformTfawsvirtualprivatecloudTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xcd\x3f\xca\xc2\x40\x10\x40\xf1\x7e\x4e\xf1\xd8\x03\x7c\x37\x48\xf5\x45\xd0\x26\x85\x1e\x60\xd9\x6c\x06\x15\xf3\x47\x32\x51\x8b\x65\xee\x2e\x89\x60\x61\xfd\x7b\xf0\x66\xb5\xe9\x31\x67\x25\xa4\x97\xc5\xe7\x3d\x07\x42\x29\xfc\x35\x69\x50\xdc\x03\x45\x20\x5f\xbb\x39\xb6\xfd\x94\x6f\x54\x1f\xfe\x3f\xd4\xc7\x95\x05\x74\x4c\x6d\xaf\xb1\x1b\x2d\x5e\x26\x5b\xc6\x34\xa8\x51\xb1\x56\xbb\x8d\xea\xe6\xb4\xff\x82\xbb\xc0\x92\xce\x46\x41\x00\xb6\x51\xf5\x33\x15\x70\xf1\x77\x00\x00\x00\xff\xff\x87\x7e\x7c\x86\x9c\x00\x00\x00")

func terraformTfawsvirtualprivatecloudTmplBytes() ([]byte, error) {
	return bindataRead(
		_terraformTfawsvirtualprivatecloudTmpl,
		"terraform/tfawsvirtualprivatecloud.tmpl",
	)
}

func terraformTfawsvirtualprivatecloudTmpl() (*asset, error) {
	bytes, err := terraformTfawsvirtualprivatecloudTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "terraform/tfawsvirtualprivatecloud.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _terraformTffileprovisionerTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x28\xca\x2f\xcb\x2c\xce\xcc\xcf\x4b\x2d\x52\x50\x4a\xcb\xcc\x49\x55\x52\xa8\xe6\x52\x50\x28\xce\x2f\x2d\x4a\x4e\x55\xb0\x55\x50\xaa\xae\x56\xd0\x0b\x86\xf0\x6a\x6b\x95\xb8\x14\x14\x52\x52\x8b\x4b\x32\xf3\x12\x4b\x32\xf3\xf3\x60\xf2\x2e\x48\x42\x20\x45\xb5\x80\x00\x00\x00\xff\xff\x69\x7c\xb5\x6f\x56\x00\x00\x00")

func terraformTffileprovisionerTmplBytes() ([]byte, error) {
	return bindataRead(
		_terraformTffileprovisionerTmpl,
		"terraform/tffileprovisioner.tmpl",
	)
}

func terraformTffileprovisionerTmpl() (*asset, error) {
	bytes, err := terraformTffileprovisionerTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "terraform/tffileprovisioner.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _terraformTfgcpelasticipTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x4a\x2d\xce\x2f\x2d\x4a\x4e\x55\x50\x4a\xcf\xcf\x4f\xcf\x49\x8d\x4f\xce\xcf\x2d\x28\x2d\x49\x8d\x4f\x4c\x49\x29\x4a\x2d\x2e\x56\x52\x50\xaa\xae\x56\xd0\xf3\x4b\xcc\x4d\x55\xa8\xad\x55\x52\xa8\xe6\x52\x50\xc8\x03\x71\x6c\x51\x25\xb8\x6a\x01\x01\x00\x00\xff\xff\x73\x65\xf0\xbc\x4a\x00\x00\x00")

func terraformTfgcpelasticipTmplBytes() ([]byte, error) {
	return bindataRead(
		_terraformTfgcpelasticipTmpl,
		"terraform/tfgcpelasticip.tmpl",
	)
}

func terraformTfgcpelasticipTmpl() (*asset, error) {
	bytes, err := terraformTfgcpelasticipTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "terraform/tfgcpelasticip.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _terraformTfgcpfirewallTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\x31\x6e\xc4\x20\x10\x45\x7b\x4e\xf1\x85\x52\x46\xdc\x60\xaf\x90\xc2\x71\x17\x45\x16\xda\xfd\x41\x51\xb0\x59\x61\xac\x2d\x46\x73\xf7\x68\x58\x1a\xa7\x4a\x37\xe8\xf1\x1e\x4c\xe5\x5e\x8e\x7a\x25\x7c\x2a\x25\x65\x2e\xd7\xb2\xde\x8f\xc6\xe5\xeb\xbb\xf2\x11\x73\xf6\xf0\x22\x08\x6f\x71\x25\x54\x3d\xc4\x01\x9b\x1d\x00\x5c\xce\xcc\x08\xdb\xa3\xd4\x1f\x23\x2f\xf2\xa7\x38\x58\xe8\xca\x98\x87\x1a\xac\xa8\xde\x39\x40\xa4\xc6\x2d\x11\x61\x3a\x32\x77\x55\x67\x0f\x89\x84\x99\xeb\x3d\xc7\xc6\x30\x71\xbb\xb1\xf2\xd6\x91\x08\x37\x9b\x1c\xf0\xdc\x63\xe9\xf6\x8e\x0b\x3e\x30\xd4\xd1\x7b\xef\x7c\xea\x78\x64\x61\xff\x0f\xaa\xfe\x75\x5c\x7d\xc6\x80\x4f\x0b\xb6\x58\x13\xdb\xd2\x62\xea\xb9\x73\x6d\xee\x70\x8e\xe9\x1f\x2d\xfd\x0d\x00\x00\xff\xff\x14\x43\x44\x82\x65\x01\x00\x00")

func terraformTfgcpfirewallTmplBytes() ([]byte, error) {
	return bindataRead(
		_terraformTfgcpfirewallTmpl,
		"terraform/tfgcpfirewall.tmpl",
	)
}

func terraformTfgcpfirewallTmpl() (*asset, error) {
	bytes, err := terraformTfgcpfirewallTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "terraform/tfgcpfirewall.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _terraformTfgcpfirewallallowruleTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\xcc\xc9\xc9\x2f\x57\xa8\xe6\x52\x50\x28\x28\xca\x2f\xc9\x4f\xce\xcf\x51\xb0\x55\x50\xaa\xae\xd6\x0b\x80\x72\x6b\x6b\x95\x40\x92\xf9\x45\x25\xc5\x0a\x0a\x0a\x0a\xb6\x0a\xd1\x5c\x20\xba\xba\xba\x28\x31\x2f\x3d\x55\x41\x2f\x00\x24\x53\x5b\x0b\x16\x54\x00\xeb\xac\xad\x55\xd2\x81\xaa\x49\xcd\x4b\x01\x4b\xc5\x72\xd5\x02\x02\x00\x00\xff\xff\x66\x8a\x2c\x72\x69\x00\x00\x00")

func terraformTfgcpfirewallallowruleTmplBytes() ([]byte, error) {
	return bindataRead(
		_terraformTfgcpfirewallallowruleTmpl,
		"terraform/tfgcpfirewallallowrule.tmpl",
	)
}

func terraformTfgcpfirewallallowruleTmpl() (*asset, error) {
	bytes, err := terraformTfgcpfirewallallowruleTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "terraform/tfgcpfirewallallowrule.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _terraformTfgcpinstanceTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x52\xcd\x8a\xd4\x40\x10\xbe\xe7\x29\x8a\xe0\x51\xf3\x00\xc2\x1c\x44\x5d\x36\x88\x12\x9c\xf1\xa2\x48\xa8\xe9\xd4\x66\x8b\x49\xba\x43\x57\x65\x64\x0c\xfd\xee\xd2\x9d\xf4\xcc\x22\x73\x12\x8f\xa9\xef\xaf\xea\xeb\x78\x12\x37\x7b\x43\x50\xf6\xce\xf5\x03\xb5\xc6\x8d\xd3\xac\xd4\xb2\x15\x45\x6b\xa8\x84\x72\x59\xa0\xfa\x82\x23\x41\x08\x25\x2c\x05\x80\x8d\x1f\xbb\x15\x78\x74\xa2\x19\x2c\x00\x46\x34\xcf\x6c\xa9\xd5\xcb\x74\xa5\xd4\x9b\xd5\x21\xce\x56\xda\x6f\x67\xaf\xf0\xbb\x33\xf2\x80\x47\x1e\x58\x2f\xdf\xe3\x7c\xa5\x28\xf6\x02\x3b\xf8\x51\x00\x00\x2c\x8b\x47\xdb\x13\x1c\xb0\x97\x10\xd2\x08\xa2\xba\x0a\xa1\x7c\xbd\x31\xc8\x76\x09\xfa\x59\x14\x00\x1d\xcb\x29\xed\x0a\xc0\x23\xf6\xb7\xb0\xcf\xf5\xe6\x1f\x22\xcd\x92\xfe\x72\xfe\xd4\xb2\x55\xf2\x4f\x68\x68\xd3\xc8\x7c\xdc\xa0\x28\x7c\xb5\xfc\x55\xce\x0d\xae\xa2\xe9\x3e\x7d\xe6\x8e\xaa\x58\x4f\x8a\x00\xc0\xae\xf3\x24\x92\xd3\x1b\xcf\x67\x54\xaa\x9b\xb4\xc3\xca\x30\x86\x44\x5a\xe3\xec\x13\xf7\x5b\x7a\x6c\x58\x5b\x9e\xee\x66\x6f\x96\x29\xf8\xe3\x80\xa2\x6c\xea\xe6\x9a\xbd\xa1\x6b\x7a\xc8\x67\x8e\xa4\xd8\xa1\x62\xbe\x4e\x9e\xdf\x9c\xe8\x92\xd6\xf2\xce\xe9\xdb\x74\xc4\xfe\xb1\x99\x8f\x03\x9b\x4f\x74\x79\x59\x51\xd6\xb6\xa2\xe8\x75\x9e\x5a\x31\x9e\x27\x85\x1d\x44\xd5\x37\x21\xff\x01\x15\xf7\x69\x58\x1d\x68\x9c\x06\x54\xaa\xbe\x92\xed\xc8\x53\x07\x21\x99\x44\xea\x7b\x67\x2d\x19\x65\x67\xab\xc3\xc3\x5d\x22\x40\x71\x7b\xea\xea\x81\x07\x6a\xbc\x3b\xb3\xb0\xb3\xe4\xf3\xbb\x2f\xcb\x3d\x79\x02\xf3\x3f\xf0\xd2\xa5\xb6\x03\xdb\xff\xe0\xb3\x1e\xf8\x6f\x3e\xe1\x4f\x00\x00\x00\xff\xff\x6f\x82\x8b\x2f\x66\x03\x00\x00")

func terraformTfgcpinstanceTmplBytes() ([]byte, error) {
	return bindataRead(
		_terraformTfgcpinstanceTmpl,
		"terraform/tfgcpinstance.tmpl",
	)
}

func terraformTfgcpinstanceTmpl() (*asset, error) {
	bytes, err := terraformTfgcpinstanceTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "terraform/tfgcpinstance.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _terraformTfgcpnetworkTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xcc\x31\x0a\x02\x31\x10\x85\xe1\x3e\xa7\x78\xe4\x00\xde\x60\x0b\xb1\xb7\xf1\x00\x21\x86\xc7\x16\xba\x3b\x92\x99\xc1\x22\xcc\xdd\x65\x83\xcd\x96\x8f\xef\xf1\x77\xaa\x78\x6f\x44\x5e\x45\xd6\x37\x4b\x93\xed\xe3\xc6\xb2\xd3\xbe\xd2\x5f\x19\x79\x0c\x5c\xee\x75\x23\x22\x32\x46\x02\xf6\x63\x2c\x67\x48\x40\x75\x93\xd2\x3a\xab\xb1\xa8\x3f\xff\x01\xc5\x82\xe3\x78\x75\x93\xdb\xc4\xc7\x34\x45\x44\x8a\x5f\x00\x00\x00\xff\xff\xd9\x3b\xaf\x88\x7f\x00\x00\x00")

func terraformTfgcpnetworkTmplBytes() ([]byte, error) {
	return bindataRead(
		_terraformTfgcpnetworkTmpl,
		"terraform/tfgcpnetwork.tmpl",
	)
}

func terraformTfgcpnetworkTmpl() (*asset, error) {
	bytes, err := terraformTfgcpnetworkTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "terraform/tfgcpnetwork.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _terraformTfgcpproviderTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xca\x31\x0a\xc2\x60\x0c\xc5\xf1\xbd\xa7\x78\x04\x07\x5d\xbc\x41\x27\xc1\x59\xbc\x81\xb4\xcf\x8f\x48\x68\x4a\x2c\x2e\x21\x77\x97\x56\x11\xdf\xf8\xfe\xbf\x39\xfc\xa5\x23\x03\xd2\xdc\x9b\x51\x90\x1d\x30\x04\x47\x4e\x8b\xde\xec\x89\x1e\xb2\xcb\xbb\x1a\xf7\x92\x89\xe3\xe9\x97\xce\x6a\x44\x95\x1c\x4a\x3a\x60\x0e\x7f\x70\x58\xb0\xae\xc7\x46\x2f\xdf\xab\x36\x10\x6c\xea\x13\xfe\xc1\xf5\x73\xad\xbd\xde\x01\x00\x00\xff\xff\x7f\x45\xf5\xb3\x89\x00\x00\x00")

func terraformTfgcpproviderTmplBytes() ([]byte, error) {
	return bindataRead(
		_terraformTfgcpproviderTmpl,
		"terraform/tfgcpprovider.tmpl",
	)
}

func terraformTfgcpproviderTmpl() (*asset, error) {
	bytes, err := terraformTfgcpproviderTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "terraform/tfgcpprovider.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _terraformTfgcpsubnetTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x4a\x2d\xce\x2f\x2d\x4a\x4e\x55\x50\x4a\xcf\xcf\x4f\xcf\x49\x8d\x4f\xce\xcf\x2d\x28\x2d\x49\x8d\x2f\x2e\x4d\xca\x4b\x2d\x29\xcf\x2f\xca\x56\x52\x50\xaa\xae\x56\xd0\xf3\x4b\xcc\x4d\x55\xa8\xad\x55\x52\xa8\xe6\x52\x50\xc8\x03\x71\xe0\xc0\x16\x55\x05\x97\x82\x42\x66\x41\x7c\x72\x66\x4a\x51\x7c\x51\x62\x5e\x7a\x2a\x4c\xde\xd9\xd3\x25\x08\x2a\x0f\x35\x1a\xa1\x5f\xa5\x1a\xcd\x7e\xa8\x0a\x3d\xb0\xc1\x50\x36\xd4\x02\xbd\xe2\xd4\x9c\xb4\xf8\x9c\xcc\xbc\xec\x5a\x25\xae\x5a\x40\x00\x00\x00\xff\xff\x56\xe7\xa7\xe7\xc2\x00\x00\x00")

func terraformTfgcpsubnetTmplBytes() ([]byte, error) {
	return bindataRead(
		_terraformTfgcpsubnetTmpl,
		"terraform/tfgcpsubnet.tmpl",
	)
}

func terraformTfgcpsubnetTmpl() (*asset, error) {
	bytes, err := terraformTfgcpsubnetTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "terraform/tfgcpsubnet.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _terraformTfinlineprovisionerTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xca\x31\x0a\x02\x41\x0c\x05\xd0\x7e\x4e\xf1\x49\xad\x7b\x03\x2b\x8f\x21\x16\x8b\xf3\x91\x80\x93\x48\x46\x44\x08\xb9\xbb\x30\x6c\xfd\xde\x3b\xfc\xab\x53\xdd\x18\x90\xe0\xf0\x0f\xcf\xfc\xf1\x21\xc8\x06\xa8\xbd\xd4\x88\x0b\x6e\x0d\x00\x32\x63\xb7\x27\xb1\x5d\x7d\x8c\xdd\xfa\x44\xd5\x02\x40\x32\xb7\x2a\x39\x1d\x8f\xd6\x17\xdd\x5b\xfd\x03\x00\x00\xff\xff\xac\x41\xa2\x6f\x62\x00\x00\x00")

func terraformTfinlineprovisionerTmplBytes() ([]byte, error) {
	return bindataRead(
		_terraformTfinlineprovisionerTmpl,
		"terraform/tfinlineprovisioner.tmpl",
	)
}

func terraformTfinlineprovisionerTmpl() (*asset, error) {
	bytes, err := terraformTfinlineprovisionerTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "terraform/tfinlineprovisioner.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _terraformTfinstanceconnectionTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8d\xb1\x0e\xc2\x40\x08\x86\xf7\x7b\x0a\x72\x0f\xd0\x37\x70\x30\x8e\x2e\x0e\x3a\x9b\xa6\x87\xc9\x45\x0b\x15\x4e\x9b\x86\xf0\xee\x06\x4d\x75\x70\x83\xff\xfb\xf9\x30\xab\x17\xc0\x3b\x74\x3b\x26\x3a\x2e\x13\x42\x9e\x2b\x15\x9e\x35\xbb\xa7\x81\x89\x70\x68\x95\x09\x2c\x01\xb4\xe0\x9b\x77\x43\xc6\x9c\x00\x1e\x8a\x12\xc1\xb6\x8c\x95\xaa\x36\xe9\x1b\x4b\x80\xa9\x57\x9d\x59\x4a\x40\x33\xe8\x0e\xeb\xee\x9e\x93\x27\x33\xbc\x29\xfe\x3f\x58\x7d\x71\x72\x8a\x39\xea\x00\x93\xd4\x67\xdf\xf0\x7c\xc5\xe5\x2b\xfc\x44\x7b\x5c\x7e\x4a\x2a\xee\xaf\x00\x00\x00\xff\xff\x63\x96\x13\xf7\xd0\x00\x00\x00")

func terraformTfinstanceconnectionTmplBytes() ([]byte, error) {
	return bindataRead(
		_terraformTfinstanceconnectionTmpl,
		"terraform/tfinstanceconnection.tmpl",
	)
}

func terraformTfinstanceconnectionTmpl() (*asset, error) {
	bytes, err := terraformTfinstanceconnectionTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "terraform/tfinstanceconnection.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _terraformTfoutputTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x2f\x2d\x29\x28\x2d\x51\x50\xaa\xae\x56\xd0\xf3\x4b\xcc\x4d\x55\xa8\xad\x55\x52\xa8\xe6\x52\x50\x28\x4b\xcc\x29\x4d\x55\xb0\x85\xc8\x84\x81\x39\xb5\xb5\x4a\x5c\xb5\x80\x00\x00\x00\xff\xff\xb3\xa9\x5b\x1f\x31\x00\x00\x00")

func terraformTfoutputTmplBytes() ([]byte, error) {
	return bindataRead(
		_terraformTfoutputTmpl,
		"terraform/tfoutput.tmpl",
	)
}

func terraformTfoutputTmpl() (*asset, error) {
	bytes, err := terraformTfoutputTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "terraform/tfoutput.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _terraformTfscriptprovisionerTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\x8b\x3d\x0a\x02\x41\x0c\x85\xfb\x39\xc5\x63\x6a\xdd\x1b\xd8\x79\x03\x4b\xb1\x58\xd6\x87\xa4\x30\xb3\x24\x41\x84\x90\xbb\x0b\xe3\xb6\xdf\xcf\x6e\xe3\x23\x2e\x43\x69\xe8\xc6\xf7\x08\x9e\xf9\xe5\xd6\x91\x0d\xf0\xcd\x64\x0f\xc7\x05\xf7\x06\x00\x99\xb6\xea\x8b\x58\x6e\x7f\x51\x35\x31\xd0\x33\x97\x2b\x3d\x44\xd7\x90\xa1\x55\xfd\x74\x0c\xd4\xe7\xac\x1e\xad\x7e\x01\x00\x00\xff\xff\x73\x9c\x5f\x9b\x6c\x00\x00\x00")

func terraformTfscriptprovisionerTmplBytes() ([]byte, error) {
	return bindataRead(
		_terraformTfscriptprovisionerTmpl,
		"terraform/tfscriptprovisioner.tmpl",
	)
}

func terraformTfscriptprovisionerTmpl() (*asset, error) {
	bytes, err := terraformTfscriptprovisionerTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "terraform/tfscriptprovisioner.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _terraformTfuserdatascriptTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb2\xb1\x09\x75\x71\xf5\x77\xe3\xaa\xae\xd6\x0b\x49\xcd\x2d\xc8\x49\x2c\x49\xd5\x0b\x4a\xcd\x4b\x49\x2d\x4a\x4d\xa9\xad\xe5\x02\x4b\x02\x02\x00\x00\xff\xff\xd8\x2e\xfc\xca\x24\x00\x00\x00")

func terraformTfuserdatascriptTmplBytes() ([]byte, error) {
	return bindataRead(
		_terraformTfuserdatascriptTmpl,
		"terraform/tfuserdatascript.tmpl",
	)
}

func terraformTfuserdatascriptTmpl() (*asset, error) {
	bytes, err := terraformTfuserdatascriptTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "terraform/tfuserdatascript.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _terraformTfvarTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x4b\x2c\xca\x4c\x4c\xca\x49\x55\x50\xaa\xae\x56\xd0\xf3\x4b\xcc\x4d\x55\xa8\xad\x55\x52\xa8\xe6\x52\x50\x48\x49\x2d\x4e\x2e\xca\x2c\x28\xc9\xcc\xcf\x53\xb0\x85\xc8\xbb\x20\x09\xd5\xd6\x2a\x81\x15\xa5\x25\x96\xe6\x94\xc0\x14\x84\x25\xe6\x94\x82\x4d\xe0\xaa\x05\x04\x00\x00\xff\xff\x12\xcb\x6d\xfb\x5a\x00\x00\x00")

func terraformTfvarTmplBytes() ([]byte, error) {
	return bindataRead(
		_terraformTfvarTmpl,
		"terraform/tfvar.tmpl",
	)
}

func terraformTfvarTmpl() (*asset, error) {
	bytes, err := terraformTfvarTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "terraform/tfvar.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"config.yml": configYml,
	"env.yml": envYml,
	"terraform/tfawsdhcpoptions.tmpl": terraformTfawsdhcpoptionsTmpl,
	"terraform/tfawsdhcpoptionsassociation.tmpl": terraformTfawsdhcpoptionsassociationTmpl,
	"terraform/tfawsegressrule.tmpl": terraformTfawsegressruleTmpl,
	"terraform/tfawselasticip.tmpl": terraformTfawselasticipTmpl,
	"terraform/tfawsingressrule.tmpl": terraformTfawsingressruleTmpl,
	"terraform/tfawsinstance.tmpl": terraformTfawsinstanceTmpl,
	"terraform/tfawskeypair.tmpl": terraformTfawskeypairTmpl,
	"terraform/tfawsnatgateway.tmpl": terraformTfawsnatgatewayTmpl,
	"terraform/tfawsprovider.tmpl": terraformTfawsproviderTmpl,
	"terraform/tfawsroute.tmpl": terraformTfawsrouteTmpl,
	"terraform/tfawsroute53arecord.tmpl": terraformTfawsroute53arecordTmpl,
	"terraform/tfawsroutetable.tmpl": terraformTfawsroutetableTmpl,
	"terraform/tfawsroutetableassociation.tmpl": terraformTfawsroutetableassociationTmpl,
	"terraform/tfawssecuritygroup.tmpl": terraformTfawssecuritygroupTmpl,
	"terraform/tfawssubnet.tmpl": terraformTfawssubnetTmpl,
	"terraform/tfawsvirtualprivatecloud.tmpl": terraformTfawsvirtualprivatecloudTmpl,
	"terraform/tffileprovisioner.tmpl": terraformTffileprovisionerTmpl,
	"terraform/tfgcpelasticip.tmpl": terraformTfgcpelasticipTmpl,
	"terraform/tfgcpfirewall.tmpl": terraformTfgcpfirewallTmpl,
	"terraform/tfgcpfirewallallowrule.tmpl": terraformTfgcpfirewallallowruleTmpl,
	"terraform/tfgcpinstance.tmpl": terraformTfgcpinstanceTmpl,
	"terraform/tfgcpnetwork.tmpl": terraformTfgcpnetworkTmpl,
	"terraform/tfgcpprovider.tmpl": terraformTfgcpproviderTmpl,
	"terraform/tfgcpsubnet.tmpl": terraformTfgcpsubnetTmpl,
	"terraform/tfinlineprovisioner.tmpl": terraformTfinlineprovisionerTmpl,
	"terraform/tfinstanceconnection.tmpl": terraformTfinstanceconnectionTmpl,
	"terraform/tfoutput.tmpl": terraformTfoutputTmpl,
	"terraform/tfscriptprovisioner.tmpl": terraformTfscriptprovisionerTmpl,
	"terraform/tfuserdatascript.tmpl": terraformTfuserdatascriptTmpl,
	"terraform/tfvar.tmpl": terraformTfvarTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"config.yml": &bintree{configYml, map[string]*bintree{}},
	"env.yml": &bintree{envYml, map[string]*bintree{}},
	"terraform": &bintree{nil, map[string]*bintree{
		"tfawsdhcpoptions.tmpl": &bintree{terraformTfawsdhcpoptionsTmpl, map[string]*bintree{}},
		"tfawsdhcpoptionsassociation.tmpl": &bintree{terraformTfawsdhcpoptionsassociationTmpl, map[string]*bintree{}},
		"tfawsegressrule.tmpl": &bintree{terraformTfawsegressruleTmpl, map[string]*bintree{}},
		"tfawselasticip.tmpl": &bintree{terraformTfawselasticipTmpl, map[string]*bintree{}},
		"tfawsingressrule.tmpl": &bintree{terraformTfawsingressruleTmpl, map[string]*bintree{}},
		"tfawsinstance.tmpl": &bintree{terraformTfawsinstanceTmpl, map[string]*bintree{}},
		"tfawskeypair.tmpl": &bintree{terraformTfawskeypairTmpl, map[string]*bintree{}},
		"tfawsnatgateway.tmpl": &bintree{terraformTfawsnatgatewayTmpl, map[string]*bintree{}},
		"tfawsprovider.tmpl": &bintree{terraformTfawsproviderTmpl, map[string]*bintree{}},
		"tfawsroute.tmpl": &bintree{terraformTfawsrouteTmpl, map[string]*bintree{}},
		"tfawsroute53arecord.tmpl": &bintree{terraformTfawsroute53arecordTmpl, map[string]*bintree{}},
		"tfawsroutetable.tmpl": &bintree{terraformTfawsroutetableTmpl, map[string]*bintree{}},
		"tfawsroutetableassociation.tmpl": &bintree{terraformTfawsroutetableassociationTmpl, map[string]*bintree{}},
		"tfawssecuritygroup.tmpl": &bintree{terraformTfawssecuritygroupTmpl, map[string]*bintree{}},
		"tfawssubnet.tmpl": &bintree{terraformTfawssubnetTmpl, map[string]*bintree{}},
		"tfawsvirtualprivatecloud.tmpl": &bintree{terraformTfawsvirtualprivatecloudTmpl, map[string]*bintree{}},
		"tffileprovisioner.tmpl": &bintree{terraformTffileprovisionerTmpl, map[string]*bintree{}},
		"tfgcpelasticip.tmpl": &bintree{terraformTfgcpelasticipTmpl, map[string]*bintree{}},
		"tfgcpfirewall.tmpl": &bintree{terraformTfgcpfirewallTmpl, map[string]*bintree{}},
		"tfgcpfirewallallowrule.tmpl": &bintree{terraformTfgcpfirewallallowruleTmpl, map[string]*bintree{}},
		"tfgcpinstance.tmpl": &bintree{terraformTfgcpinstanceTmpl, map[string]*bintree{}},
		"tfgcpnetwork.tmpl": &bintree{terraformTfgcpnetworkTmpl, map[string]*bintree{}},
		"tfgcpprovider.tmpl": &bintree{terraformTfgcpproviderTmpl, map[string]*bintree{}},
		"tfgcpsubnet.tmpl": &bintree{terraformTfgcpsubnetTmpl, map[string]*bintree{}},
		"tfinlineprovisioner.tmpl": &bintree{terraformTfinlineprovisionerTmpl, map[string]*bintree{}},
		"tfinstanceconnection.tmpl": &bintree{terraformTfinstanceconnectionTmpl, map[string]*bintree{}},
		"tfoutput.tmpl": &bintree{terraformTfoutputTmpl, map[string]*bintree{}},
		"tfscriptprovisioner.tmpl": &bintree{terraformTfscriptprovisionerTmpl, map[string]*bintree{}},
		"tfuserdatascript.tmpl": &bintree{terraformTfuserdatascriptTmpl, map[string]*bintree{}},
		"tfvar.tmpl": &bintree{terraformTfvarTmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

