// Code generated by entc, DO NOT EDIT.

package fileextract

const (
	// Label holds the string label denoting the fileextract type in the database.
	Label = "file_extract"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldHclID holds the string denoting the hcl_id field in the database.
	FieldHclID = "hcl_id"
	// FieldSource holds the string denoting the source field in the database.
	FieldSource = "source"
	// FieldDestination holds the string denoting the destination field in the database.
	FieldDestination = "destination"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "type"
	// FieldTags holds the string denoting the tags field in the database.
	FieldTags = "tags"

	// EdgeFileExtractToTag holds the string denoting the fileextracttotag edge name in mutations.
	EdgeFileExtractToTag = "FileExtractToTag"
	// EdgeFileExtractToEnvironment holds the string denoting the fileextracttoenvironment edge name in mutations.
	EdgeFileExtractToEnvironment = "FileExtractToEnvironment"

	// Table holds the table name of the fileextract in the database.
	Table = "file_extracts"
	// FileExtractToTagTable is the table the holds the FileExtractToTag relation/edge.
	FileExtractToTagTable = "tags"
	// FileExtractToTagInverseTable is the table name for the Tag entity.
	// It exists in this package in order to avoid circular dependency with the "tag" package.
	FileExtractToTagInverseTable = "tags"
	// FileExtractToTagColumn is the table column denoting the FileExtractToTag relation/edge.
	FileExtractToTagColumn = "file_extract_file_extract_to_tag"
	// FileExtractToEnvironmentTable is the table the holds the FileExtractToEnvironment relation/edge. The primary key declared below.
	FileExtractToEnvironmentTable = "environment_EnvironmentToFileExtract"
	// FileExtractToEnvironmentInverseTable is the table name for the Environment entity.
	// It exists in this package in order to avoid circular dependency with the "environment" package.
	FileExtractToEnvironmentInverseTable = "environments"
)

// Columns holds all SQL columns for fileextract fields.
var Columns = []string{
	FieldID,
	FieldHclID,
	FieldSource,
	FieldDestination,
	FieldType,
	FieldTags,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the FileExtract type.
var ForeignKeys = []string{
	"provisioning_step_provisioning_step_to_file_extract",
}

var (
	// FileExtractToEnvironmentPrimaryKey and FileExtractToEnvironmentColumn2 are the table columns denoting the
	// primary key for the FileExtractToEnvironment relation (M2M).
	FileExtractToEnvironmentPrimaryKey = []string{"environment_id", "file_extract_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
