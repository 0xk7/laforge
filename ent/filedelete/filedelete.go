// Code generated by entc, DO NOT EDIT.

package filedelete

const (
	// Label holds the string label denoting the filedelete type in the database.
	Label = "file_delete"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldPath holds the string denoting the path field in the database.
	FieldPath = "path"
	// FieldTags holds the string denoting the tags field in the database.
	FieldTags = "tags"

	// EdgeFileDeleteToTag holds the string denoting the filedeletetotag edge name in mutations.
	EdgeFileDeleteToTag = "FileDeleteToTag"

	// Table holds the table name of the filedelete in the database.
	Table = "file_deletes"
	// FileDeleteToTagTable is the table the holds the FileDeleteToTag relation/edge.
	FileDeleteToTagTable = "tags"
	// FileDeleteToTagInverseTable is the table name for the Tag entity.
	// It exists in this package in order to avoid circular dependency with the "tag" package.
	FileDeleteToTagInverseTable = "tags"
	// FileDeleteToTagColumn is the table column denoting the FileDeleteToTag relation/edge.
	FileDeleteToTagColumn = "file_delete_file_delete_to_tag"
)

// Columns holds all SQL columns for filedelete fields.
var Columns = []string{
	FieldID,
	FieldPath,
	FieldTags,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the FileDelete type.
var ForeignKeys = []string{
	"provisioning_step_provisioning_step_to_file_delete",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
