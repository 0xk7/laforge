// Code generated by entc, DO NOT EDIT.

package provisioningstep

const (
	// Label holds the string label denoting the provisioningstep type in the database.
	Label = "provisioning_step"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldProvisionerType holds the string denoting the provisioner_type field in the database.
	FieldProvisionerType = "provisioner_type"
	// FieldStepNumber holds the string denoting the step_number field in the database.
	FieldStepNumber = "step_number"

	// EdgeProvisioningStepToTag holds the string denoting the provisioningsteptotag edge name in mutations.
	EdgeProvisioningStepToTag = "ProvisioningStepToTag"
	// EdgeProvisioningStepToStatus holds the string denoting the provisioningsteptostatus edge name in mutations.
	EdgeProvisioningStepToStatus = "ProvisioningStepToStatus"
	// EdgeProvisioningStepToProvisionedHost holds the string denoting the provisioningsteptoprovisionedhost edge name in mutations.
	EdgeProvisioningStepToProvisionedHost = "ProvisioningStepToProvisionedHost"
	// EdgeProvisioningStepToScript holds the string denoting the provisioningsteptoscript edge name in mutations.
	EdgeProvisioningStepToScript = "ProvisioningStepToScript"
	// EdgeProvisioningStepToCommand holds the string denoting the provisioningsteptocommand edge name in mutations.
	EdgeProvisioningStepToCommand = "ProvisioningStepToCommand"
	// EdgeProvisioningStepToDNSRecord holds the string denoting the provisioningsteptodnsrecord edge name in mutations.
	EdgeProvisioningStepToDNSRecord = "ProvisioningStepToDNSRecord"
	// EdgeProvisioningStepToRemoteFile holds the string denoting the provisioningsteptoremotefile edge name in mutations.
	EdgeProvisioningStepToRemoteFile = "ProvisioningStepToRemoteFile"

	// Table holds the table name of the provisioningstep in the database.
	Table = "provisioning_steps"
	// ProvisioningStepToTagTable is the table the holds the ProvisioningStepToTag relation/edge.
	ProvisioningStepToTagTable = "tags"
	// ProvisioningStepToTagInverseTable is the table name for the Tag entity.
	// It exists in this package in order to avoid circular dependency with the "tag" package.
	ProvisioningStepToTagInverseTable = "tags"
	// ProvisioningStepToTagColumn is the table column denoting the ProvisioningStepToTag relation/edge.
	ProvisioningStepToTagColumn = "provisioning_step_provisioning_step_to_tag"
	// ProvisioningStepToStatusTable is the table the holds the ProvisioningStepToStatus relation/edge.
	ProvisioningStepToStatusTable = "status"
	// ProvisioningStepToStatusInverseTable is the table name for the Status entity.
	// It exists in this package in order to avoid circular dependency with the "status" package.
	ProvisioningStepToStatusInverseTable = "status"
	// ProvisioningStepToStatusColumn is the table column denoting the ProvisioningStepToStatus relation/edge.
	ProvisioningStepToStatusColumn = "provisioning_step_provisioning_step_to_status"
	// ProvisioningStepToProvisionedHostTable is the table the holds the ProvisioningStepToProvisionedHost relation/edge. The primary key declared below.
	ProvisioningStepToProvisionedHostTable = "provisioning_step_ProvisioningStepToProvisionedHost"
	// ProvisioningStepToProvisionedHostInverseTable is the table name for the ProvisionedHost entity.
	// It exists in this package in order to avoid circular dependency with the "provisionedhost" package.
	ProvisioningStepToProvisionedHostInverseTable = "provisioned_hosts"
	// ProvisioningStepToScriptTable is the table the holds the ProvisioningStepToScript relation/edge.
	ProvisioningStepToScriptTable = "scripts"
	// ProvisioningStepToScriptInverseTable is the table name for the Script entity.
	// It exists in this package in order to avoid circular dependency with the "script" package.
	ProvisioningStepToScriptInverseTable = "scripts"
	// ProvisioningStepToScriptColumn is the table column denoting the ProvisioningStepToScript relation/edge.
	ProvisioningStepToScriptColumn = "provisioning_step_provisioning_step_to_script"
	// ProvisioningStepToCommandTable is the table the holds the ProvisioningStepToCommand relation/edge.
	ProvisioningStepToCommandTable = "commands"
	// ProvisioningStepToCommandInverseTable is the table name for the Command entity.
	// It exists in this package in order to avoid circular dependency with the "command" package.
	ProvisioningStepToCommandInverseTable = "commands"
	// ProvisioningStepToCommandColumn is the table column denoting the ProvisioningStepToCommand relation/edge.
	ProvisioningStepToCommandColumn = "provisioning_step_provisioning_step_to_command"
	// ProvisioningStepToDNSRecordTable is the table the holds the ProvisioningStepToDNSRecord relation/edge.
	ProvisioningStepToDNSRecordTable = "dns_records"
	// ProvisioningStepToDNSRecordInverseTable is the table name for the DNSRecord entity.
	// It exists in this package in order to avoid circular dependency with the "dnsrecord" package.
	ProvisioningStepToDNSRecordInverseTable = "dns_records"
	// ProvisioningStepToDNSRecordColumn is the table column denoting the ProvisioningStepToDNSRecord relation/edge.
	ProvisioningStepToDNSRecordColumn = "provisioning_step_provisioning_step_to_dns_record"
	// ProvisioningStepToRemoteFileTable is the table the holds the ProvisioningStepToRemoteFile relation/edge.
	ProvisioningStepToRemoteFileTable = "remote_files"
	// ProvisioningStepToRemoteFileInverseTable is the table name for the RemoteFile entity.
	// It exists in this package in order to avoid circular dependency with the "remotefile" package.
	ProvisioningStepToRemoteFileInverseTable = "remote_files"
	// ProvisioningStepToRemoteFileColumn is the table column denoting the ProvisioningStepToRemoteFile relation/edge.
	ProvisioningStepToRemoteFileColumn = "provisioning_step_provisioning_step_to_remote_file"
)

// Columns holds all SQL columns for provisioningstep fields.
var Columns = []string{
	FieldID,
	FieldProvisionerType,
	FieldStepNumber,
}

var (
	// ProvisioningStepToProvisionedHostPrimaryKey and ProvisioningStepToProvisionedHostColumn2 are the table columns denoting the
	// primary key for the ProvisioningStepToProvisionedHost relation (M2M).
	ProvisioningStepToProvisionedHostPrimaryKey = []string{"provisioning_step_id", "provisioned_host_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
